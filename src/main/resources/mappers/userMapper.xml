<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.reservation.mappers.UserMapper">

    <sql id="userColumns">
        num,
        id,
        pw,
        name,
        email,
        post,
        addr,
        addrDetail,
        delete_yn,
        insert_time,
        update_time,
        delete_time,
        role
    </sql>

    <!--회원가입 -->
    <insert id="insertUser" parameterType="UserDTO"
            useGeneratedKeys="true" keyProperty="num">
        insert into
            user(<include refid="userColumns"/>)
        values
            (
            #{num}, #{id}, #{pw}, #{name}, #{email}, #{post}, #{addr},
            #{addrDetail}, 'N', NOW(), NULL, NULL, #{role}
            )
    </insert>

    <!--로그인한 아이디 db 존재여부-->
    <select id="existsUser" parameterType="String" resultType="int">
        select
            count(*)
        from
            user
        where
            id=#{id}
        and
            delete_yn = 'N'
    </select>

    <!--로그인한 아이디 존재한다면 비밀번호 확인-->
    <select id="userPassword" parameterType="String" resultType="LoginDTO">
        select
            num, pw, role
        from
            user
        where
            id=#{id}
    </select>

    <!-- 회원조회-->
    <select id="selectUser" parameterType="long" resultType="UserDTO">
        select
            <include refid="userColumns"/>
        from
            user
        where
            delete_yn = 'N'
        and
            num = #{num}
    </select>

    <!--회원수정-->
    <update id="updateUser" parameterType="UserDTO">
        update
            user
        set
            pw = #{pw},
            email = #{email},
            post = #{post},
            addr = #{addr},
            addrDetail = #{addrDetail},
            update_time = now()
        where
            num = #{num}
    </update>

    <!--회원 탈퇴-->
    <update id="deleteUser" parameterType="long">
        update
            user
        set
            delete_yn = 'Y',
            delete_time = now()
        where
            num = #{num}
    </update>

    <!--회원 전체 목록-->
    <select id="selectUserList" resultType="UserDTO">
        select
            <include refid="userColumns"/>
        from
            user
        where
            delete_yn = 'N'
        order By
            num, insert_time desc
    </select>

    <!--회원 데이터 수-->
    <select id="totalUserCount" resultType="int">
        select
            count(*)
        from
            user
        where
            delete_yn = 'N'
    </select>
</mapper>