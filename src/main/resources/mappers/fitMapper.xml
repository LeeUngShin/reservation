<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.reservation.mappers.FitMapper">

    <sql id="fitColumns">
        num,
        name,
        post,
        addr,
        addrDetail,
        indoor_outdoor,
        open_time,
        close_time,
        description,
        fileAttached,
        latitude,
        longitude
    </sql>

    <!--fit 등록 -->
    <insert id="insertFit" parameterType="FitDTO"
            useGeneratedKeys="true" keyProperty="num">
        insert into
            gym(
                <include refid="fitColumns"/>
            )
        values
            (
            #{num}, #{name}, #{post}, #{addr}, #{addrDetail},
            #{indoorOutdoor}, #{openTime}, #{closeTime},
            #{description}, #{fileAttached}, #{longitude},
            #{longitude}
        )
    </insert>

    <!--gym_facility 등록-->
    <insert id="insertFacility" parameterType="map">
        insert into
            gym_facility(gym_num, facility_num)
        values
        (
            #{num}, (select num from facility where type = #{facility})
        )
    </insert>

    <!--fit_MainFile 등록-->
    <insert id="insertFitMainFile" parameterType="FitFileDTO"  useGeneratedKeys="true" keyProperty="num">
        insert into fit_mainFile
        values(
            #{num}, #{fitNum}, #{originalFileName},
            #{storedFileName}
        )
    </insert>

    <!--fit_SubFile 등록-->
    <insert id="insertFitSubFile" parameterType="FitFileDTO">
        insert into fit_subFile
        values(
            #{num}, #{mainFileNum}, #{originalFileName},
            #{storedFileName}
        )
    </insert>


    <select id="selectFit" parameterType="Long" resultType="FitDTO">
        select
            g.num, g.name, g.post, g.addr, g.addrDetail, g.open_time, g.close_time, g.description , g.indoor_outdoor,
            delete_yn, ifNULL(group_concat(ff.type), "편의시설없음") as facilityTypesStr, fileAttached
        from
            gym g
        left join
            (select gf.gym_num, f.type
                from facility f
                join gym_facility gf
                on f.num = gf.facility_num) as ff
        on
            g.num = ff.gym_num
        where
            g.num = #{num}
        group by
            g.num;
    </select>

    <select id="selectFitMainFile" resultType="com.example.reservation.domain.FitFileDTO" parameterType="Long">
        select *
        from fit_mainFile
        where fit_num = #{mainFileNum}
    </select>

    <select id="selectFitSubFile" resultType="com.example.reservation.domain.FitFileDTO" parameterType="Long">
        select *
        from fit_SubFile
        where mainFile_num = #{gymNum}
    </select>

    <update id="updateFit" parameterType="FitDTO">
        update
            gym
        set
            update_time = now(),
            name = #{name},
            post = #{post},
            addr = #{addr},
            addrDetail = #{addrDetail},
            indoor_outdoor = #{indoorOutdoor},
            description = #{description},
            open_time = #{openTime},
            close_time = #{closeTime}
        where
            num = #{num}
    </update>

    <delete id="deleteFacility" parameterType="long">
        delete from
            gym_facility gf
        where
            gf.gym_num = #{num}
    </delete>

    <update id="deleteFit" parameterType="long">
        update
            gym
        set
            delete_time = now(),
            delete_yn = 'Y'
        where
            num = #{num}
    </update>

    <select id="listFit" resultType="FitDTO" parameterType="FitDTO">
        select
            g.num, g.name, g.post, g.addr, g.addrDetail, g.open_time, g.close_time, g.description , g.indoor_outdoor,
            ifNULL(group_concat(ff.type), "편의시설없음") as facilityTypesStr,
            latitude, longitude, fileAttached
        from
            gym g
        left join
            (select gf.gym_num, f.type
                from facility f
                join gym_facility gf
                on f.num = gf.facility_num) as ff
        on
            g.num = ff.gym_num
        where
            g.delete_yn = 'N'
        <if test="bigRegion == null or bigRegion == ''
            and smallRegion == null or smallRegion == ''
            and choiceType != null and choiceType != ''">
            AND g.indoor_outdoor = #{choiceType}
        </if>
        <if test="bigRegion != null and bigRegion != ''
            and smallRegion != null and smallRegion != ''
            and choiceType != null and choiceType != ''">
            AND (
            g.addr like concat('%', #{bigRegion}, '%')
            and g.addr like concat('%', #{smallRegion}, '%')
            and g.indoor_outdoor = #{choiceType}
            )
        </if>

        group by
            g.num
        order by
            g.num desc
        limit
            #{paginationInfo.firstRecordIndex}, #{recordsPerPage}
    </select>

    <select id="cntFit" resultType="int" parameterType="FitDTO">
        select
            count(*)
        from
            gym
        where
            delete_yn = 'N'
        <if test="bigRegion == null or bigRegion == ''
            and smallRegion == null or smallRegion == ''
            and choiceType != null and choiceType != ''">
            AND indoor_outdoor = #{choiceType}
        </if>
        <if test="bigRegion != null and bigRegion != ''
            and smallRegion != null and smallRegion != ''
            and choiceType != null and choiceType != ''">
            AND (
            addr like concat('%', #{bigRegion}, '%')
            and addr like concat('%', #{smallRegion}, '%')
            and indoor_outdoor = #{choiceType}
            )
        </if>
    </select>
</mapper>


